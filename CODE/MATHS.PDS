	ORG	&C000

	; low and high division
ANSWER	DW	0
ANS	DB	0	;
SIGN	DB	0 	;EQU	MIKE2

ERROR_CITY	LDA	#0	; answer will be 0
	RTS

	; NUMBER1(Low),A(High) = NUMBER1 * NUMBER2
MULTIPLY	DEC	NUMBER2
	LDA	NUMBER1
	STA	SIGN
	BPL	POSITIVE
	EOR	#255
	CLC
	ADC	#1
	STA	NUMBER1
POSITIVE	LDA	#0	; high byte zero
	LSR	NUMBER1
	BCC	S1
	ADC	NUMBER2
S1	ROR	A
	ROR	NUMBER1
	BCC	S2
	ADC	NUMBER2
S2	ROR	A
	ROR	NUMBER1
	BCC	S3
	ADC	NUMBER2
S3	ROR	A
	ROR	NUMBER1
	BCC	S4
	ADC	NUMBER2
S4	ROR	A
	ROR	NUMBER1
	BCC	S5
	ADC	NUMBER2
S5	ROR	A
	ROR	NUMBER1
	BCC	S6
	ADC	NUMBER2
S6	ROR	A
	ROR	NUMBER1
	BCC	S7
	ADC	NUMBER2
S7	ROR	A
	ROR	NUMBER1
	BCC	S8
	ADC	NUMBER2
S8	ROR	A
	ROR	NUMBER1
	STA	NUMBER1+1

	BIT	SIGN
	BPL	POSIT
	LDA	NUMBER1+0
	EOR	#255
	CLC
	ADC	#1
	STA	NUMBER1
	LDA	NUMBER1+1
	EOR	#255
	CLC
	ADC	#0
	STA	NUMBER1+1
POSIT
	INC	&D020
	JMP	4	; back to pds

	; 8 bit division
	; NUMBER1 = NUMBER1 / NUMBER2
	; ANS = REMAINDER
DIVIDE	LDA	#0
	ASL	NUMBER1
	ROL	A
	CMP	NUMBER2
	BCC	T1
	SBC	NUMBER2
T1	ROL	NUMBER1
	ROL	A
	CMP	NUMBER2
	BCC	T2
	SBC	NUMBER2
T2	ROL	NUMBER1
	ROL	A
	CMP	NUMBER2
	BCC	T3
	SBC	NUMBER2
T3	ROL	NUMBER1
	ROL	A
	CMP	NUMBER2
	BCC	T4
	SBC	NUMBER2
T4	ROL	NUMBER1
	ROL	A
	CMP	NUMBER2
	BCC	T5
	SBC	NUMBER2
T5	ROL	NUMBER1
	ROL	A
	CMP	NUMBER2
	BCC	T6
	SBC	NUMBER2
T6	ROL	NUMBER1
	ROL	A
	CMP	NUMBER2
	BCC	T7
	SBC	NUMBER2
T7	ROL	NUMBER1
	ROL	A
	CMP	NUMBER2
	BCC	T8
	SBC	NUMBER2
T8	ROL	NUMBER1
	STA	ANS
	INC	&D020
	JMP	4	; back to pds

NUMBER1	DW	&FFFF
NUMBER2	DW	&230
QUOT	DW	0

	; NUMBER1 = NUMBER1 (LO/HI) / NUMBER2 (LO/HI)
	; REMAINDER IN QUOT
DIV2	LDA	#0
	STA	QUOT
	STA	QUOT+1
	LDX	#16
DAVLP	ROL	NUMBER1
	ROL	NUMBER1+1
	ROL	QUOT
	ROL	QUOT+1
	LDA	QUOT
	SEC
	SBC	NUMBER2
	TAY
	LDA	QUOT+1
	SBC	NUMBER2+1
	BCC	DECCNT
	STY	QUOT
	STA	QUOT+1
DECCNT	DEX
 	BNE	DAVLP
	ROL	NUMBER1
	ROL	NUMBER1+1
	INC	&D020
	JMP	4

	SEND	COMPUTER1
	;END	DIVIDE
	;END	MULTIPLY
	END	DIV2

