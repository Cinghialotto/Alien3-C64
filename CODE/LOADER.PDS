
OLDORG	EQU	*		; preserve code place

DSKPTR	=	$9E
TEMPY	=	$62

	ORG	&8000	;PSCREEN

RAS_IRQ	LDA	$D019
	STA	$D019
	JMP	$EA7E

INIT	SEI	
	LDA	#$36	;roms in
	STA	$1

	JSR	$FF84	;IO_INIT
	JSR	$FF8A	;RESTOR
	SEI
	LDA	#>RAS_IRQ
	STA	&314
	LDA	#<RAS_IRQ
	STA	&315
	JSR	OPEN_DRIVE
	LDA	#>DISK_CODE
	LDX	#<DISK_CODE
	STA	DSKPTR
	STX	DSKPTR+1
!NXT_BLK	JSR	DO_M_W
	LDY	#0
!LOOP	LDA	(DSKPTR),Y
	JSR	WRT_BYT
	INY	
	CPY	#$10
	BNE	!LOOP
	INC	BORDER
	LDA	#&D
	JSR	WRT_BYT
	JSR	CLOSE_DISK
	JSR	OPEN_DRIVE
	LDA	DSKPTR
	CLC	
	ADC	#&10
	STA	DSKPTR
	BCC	!NINC
	INC	DSKPTR+1
!NINC	CMP	#>(DISK_END+DISK_CODE-$500)
	LDA	DSKPTR+1
	SBC	#<(DISK_END+DISK_CODE-$500)
	BCC	!NXT_BLK
	JSR	DO_M_E
	JSR	CLOSE_DISK
	LDA	$DD00
	AND	#$3
	ORA	#$C4
	STA	$DD00
	LDX	#$0
!SLOW	DEY	
	BNE	!SLOW
	DEX	
	BNE	!SLOW
RET	RTS

OPEN_DRIVE	JSR	$FFE7
	LDX	#$8
	LDA	#$F
	TAY	
	JSR	$FFBA
	LDA	#$0
	JSR	$FFBD
	JSR	$FFC0
	LDX	#$F
	JSR	$FFC9
	RTS
		
WRT_BYT	STY	TEMPY
	JSR	$FFD2
	LDY	TEMPY
	RTS	

DO_M_W	LDA	#"M"
	JSR	WRT_BYT
	LDA	#"-"
	JSR	WRT_BYT
	LDA	#"W"
	JSR	WRT_BYT
	LDA	DSKPTR
	SEC	
	SBC	#>(DISK_CODE-$500)
	PHP	
	CLC	
	JSR	WRT_BYT
	PLP	
	LDA	DSKPTR+1
	SBC	#<(DISK_CODE-$500)
	CLC	
	JSR	WRT_BYT
	LDA	#$10
	JMP	WRT_BYT
	
DO_M_E	LDY	#$0
!LOOP	LDA	!M_E,Y
	JSR	WRT_BYT
	INY	
	CPY	#$6
	BNE	!LOOP
	RTS	
!M_E	DB	"M-E"
	DW	$500
	DB	13
CLOSE_DISK	JSR	$FFCC
	LDA	#$F
	JMP	$FFC3

DISK_CODE	
	ORG	DISK_CODE,$500
	JSR	L67F
L503	JSR	D_GETNAM
	LDA	$E
	STA	L6A5
	LDA	$F
	STA	L6A5+1
	LDY	#$1
LA059	LDX	#$12
	STX	$E
	STY	$F
	JSR	D_GETSECT
	LDY	#$2
!NXT_FILE	LDA	$700,Y
	AND	#$83
	CMP	#$82
	BNE	!NOT_IT
	LDA	$703,Y
	CMP	L6A5
	BNE	!NOT_IT
	LDA	$704,Y
	CMP	L6A5+1
	BNE	!NOT_IT
	JMP	D_GOTNAM
!NOT_IT	TYA	
	CLC	
	ADC	#$20
	TAY	
	BCC	!NXT_FILE
	LDY	$701
	BPL	LA059
L545	LDA	#$0
	STA	$1800
	LDX	#$FE	;send file not found message
	JSR	D_SENDBYT
	LDX	#$FE
	JSR	D_SENDBYT
	LDX	#$AC
	JSR	D_SENDBYT
	LDX	#$F7
	JSR	D_SENDBYT
	JMP	L503
D_GOTNAM	LDA	$701,Y
	STA	$E
	LDA	$702,Y
	STA	$F
!NXT_BLK	JSR	D_GETSECT
	LDY	#$0
	LDA	$700
	STA	$E
	BNE	!SKIP
	LDY	$701
	INY	
!SKIP	STY	L6A5
	LDA	$701
	STA	$F
	LDY	#$2
	LDA	#$0
	STA	$1800
!MORE	LDX	$700,Y
	CPX	#$AC
	BNE	!NOT_AC
	JSR	D_SENDBYT
	LDX	#$AC
!NOT_AC	JSR	D_SENDBYT
	INY	
	CPY	L6A5
	BNE	!MORE
	LDA	$700
	BEQ	D_EOF
	LDX	#$AC
	JSR	D_SENDBYT
	LDX	#$C3
	JSR	D_SENDBYT
	LDA	#$8
	STA	$1800
	JMP	!NXT_BLK ;L56B
D_EOF	LDX	#$AC
	JSR	D_SENDBYT
	LDX	#$FF
	JSR	D_SENDBYT
	JMP	L503
D_GETNAM	LDA	#$8
	STA	$1800
	LDA	$1C00
	AND	#$F7
	STA	$1C00
	CLI	
	LDA	#$1
!WAIT	BIT	$1800
	BEQ	!WAIT
	SEI	
	LDA	#$0
	STA	$1800
	JSR	D_GETBYT
	PHA
	JSR	D_GETBYT
	STA	$E
	JSR	D_GETBYT
	STA	$F
	LDA	#$8
	STA	$1800
	LDA	$1C00
	ORA	#$8
	STA	$1C00
	PLA
	RTS	
D_GETSECT	LDY	#$5
	STY	$8B
LA070	CLI	
	LDA	#$80
	STA	$4
LA065	LDA	$4
	BMI	LA065
	CMP	#$1
	BEQ	LA066
	DEC	$8B
	LDY	$8B
	BMI	LA067
	CPY	#$2
	BNE	LA068
	LDA	#$C0
	STA	$4
LA068	LDA	$16
	STA	$12
	LDA	$17
	STA	$13
LA069	LDA	$4
	BMI	LA069
	BPL	LA070
LA067	PLA	
	PLA	
	JMP	L545
LA066	SEI	
	RTS	
D_SENDBYT	STX	$14
	LDA	#$4
	JSR	L63C
	JSR	L63C
	JSR	L63C
L63C	LSR	$14
	LDX	#$2
	BCC	LA071
	LDX	#$0
LA071	BIT	$1800
	BNE	LA071
	STX	$1800
	LSR	$14
	LDX	#$2
	BCC	LA072
	LDX	#$0
LA072	BIT	$1800
	BEQ	LA072
	STX	$1800
	RTS	
D_GETBYT	LDY	#$4
LA075	LDA	#$4
LA073	BIT	$1800
	BEQ	LA073
	LDA	$1800
	LSR	A
	ROR	$14
	LDA	#$4
LA074	BIT	$1800
	BNE	LA074
	LDA	$1800
	LSR	A
	ROR	$14
	DEY	
	BNE	LA075
	LDA	$14
	RTS	
L67F	SEI	
	CLD	
	LDY	#$8
LA078	LDA	#$10
	STA	$1800
LA076	DEX	
	BNE	LA076
	LDA	#$0
	STA	$1800
LA077	DEX	
	BNE	LA077
	DEY	
	BNE	LA078
LA079	LDA	$1800
	AND	#$5
	BNE	LA079
	LDA	$1800
	AND	#$5
	BNE	LA079
	RTS
L6A5	NOP	

DISK_END
