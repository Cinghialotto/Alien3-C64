
	ORG	&2000
	
MAP	INCBIN	ALIEN3.MAP	; map for logo
END_DAT	DS	1024,255	; marker for end
TEMP	DS	1025,255
	ORG	&4000
	DS	1024,254


DATA	EQU	&F0
STORE	EQU	&F2

	ORG	&1000

PACK_MAP	LDX	#0
TART	LDA	MAP,X
	BEQ	OK
	SEC
	SBC	#&75
	STA	MAP,X
OK	LDA	MAP+256,X
	BEQ	OK2
	SEC
	SBC	#&75
	STA	MAP+256,X
OK2	INX
	BNE	TART
	INC	&D020
	LDA	#255
	STA	MAP+&1E0

	LDA	#>MAP		; set screen data mem
	STA	DATA
	LDA	#<MAP
	STA	DATA+1
	LDY	#>&4000
	STY	STORE
	LDA	#<&4000
	STA	STORE+1
PACK_IT_ALL
	LDA	(DATA),Y		; read screen byte	
	BEQ	NOSUB
	CMP	#255		; end of map
	BEQ	END_IT
NOSUB	TAX
	INY
	LDA	(DATA),Y		; is next byte a zero
	BNE	STORE_HOLD
	TXA
	ORA	#128		; set to bit
	TAX
	INC	DATA		; advance data on
	BNE	STORE_HOLD
	INC	DATA+1	
STORE_HOLD	TXA
	LDY	#0
	STA	(STORE),Y
	INC	DATA
	BNE	!PL
	INC	DATA+1
!PL	INC	STORE
	BNE	!ED
	INC	STORE+1
!ED	LDA	#255
	STA	(STORE),Y
	JMP	PACK_IT_ALL

END_IT	LDY	#>&4000
	STY	UNPACK_IT+1
	LDA	#<&4000
	STA	UNPACK_IT+2
	LDA	#>TEMP		; unpack buffer (would be screen
	STA	DATA
	LDA	#<TEMP
	STA	DATA+1
UNPACK_IT	LDA	&FFFF		; source data
	BPL	STORE_AD
	CMP	#255
	BEQ	END_UNP
	AND	#&7F
	STA	(DATA),Y	
	INY
	BNE	FRED
	INC	DATA+1
FRED	LDA	#0
STORE_AD	STA	(DATA),Y
	INY
	BNE	ASR
	INC	DATA+1
ASR	INC	UNPACK_IT+1
	BNE	UNPACK_IT
	INC	UNPACK_IT+2	
	JMP	UNPACK_IT

END_UNP	INC	&D020
	JMP	4

	SEND	COMPUTER1
	END	PACK_MAP

